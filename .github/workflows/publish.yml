name: Deploy

on:
  push:
    branches: [ release/* ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Create tar acrhive
        run: |
          mkdir ../publish
          cp -TR . ../publish
          tar -cf publish.tar ../publish/
      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "publish.tar"
          target: "~/"
      - name: Run docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: | 
            rm -rf ~/publish
            tar -xf publish.tar -C ~/
            rm publish.tar
            cd publish
            cd ./server
            mkdir env
            cd env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} > production.env
            echo POSTGRES_NAME=${{ secrets.POSTGRES_NAME }} >> production.env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> production.env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> production.env
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> production.env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> production.env
            cd ../..
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
